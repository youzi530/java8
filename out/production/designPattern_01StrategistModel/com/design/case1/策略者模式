当我们来了两个需求：
 //需求：获取公司中年龄小于 35 的员工信息
 //需求：获取公司中工资大于 5000 的员工信息

 最原始的做法：
    我们自己写两个方法分别去判断，很多冗余代码

 使用策略者模式：
    定义个公共接口：MyPredicate里面有方法test(),当上面需求中满足条件的话，就返回boolean类型的数据
    分别去定义实现类：FilterEmployeeForAge：public boolean test(Employee t) {return t.getAge() <= 35;}
                    FilterEmployeeForSalary：public boolean test(Employee t) {return t.getSalary() >= 5000;}
    主方法里面写了一个方法去判断是引用了哪个类：
        public List<Employee> filterEmployee(List<Employee> emps, MyPredicate<Employee> mp){
            List<Employee> list = new ArrayList<>();

            for (Employee employee : emps) {
                if(mp.test(employee)){
                    list.add(employee);
                }
            }
            return list;
        }
